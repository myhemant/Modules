<?php

/**
 * @file
 * This module sends a thank you email to commenter
 */

/**
 * Implements hook_comment_insert().
 */
function thank_you_commenter_comment_insert($comment) {
    $account = \Drupal::currentUser();
    $config = \Drupal::config('thank_you_commenter.settings');
    $uid = $account->id();
    $email = $uid ? $account->getEmail() : $comment->mail->value;
    $nid = $comment->entity_id->target_id;
    $site_name = \Drupal::config('system.site')->get('name');

    if ($uid) {
        // If a mail is to be sent to registered user.
        if ($config->get('tyc_registered_users')) {
            // Get node type and check if mail is to be send to for this type.
            $node_type = db_select('node', 'n')
                    ->fields('n', array('type'))
                    ->condition('nid', $nid)
                    ->execute()
                    ->fetchField();
            if (in_array($node_type, $config->get('tyc_content_types'))) {
                $params['subject'] = t('Thank you for commenting on @site_name', array('@site_name' => $site_name));
                $params['body'] = t($config->get('tyc_authenticated_user_mailtext'), thank_you_commenter_mail_tokens($comment));
                // Sending mail
                thank_you_commenter_send_mail($email, $params, $nid);
            }
        }
    } else {
        // If a mail is to be sent to anonymous user, and will be send only if
        // mail is provided during commenting process.
        if ($config->get('tyc_anonymous_users') && !empty($email)) {
            // Get node type and check if mail is to be send to for this type.
            $node_type = db_select('node', 'n')
                    ->fields('n', array('type'))
                    ->condition('nid', $nid)
                    ->execute()
                    ->fetchField();

            if (in_array($node_type, $config->get('tyc_content_types'))) {
                $params['subject'] = t('Thank you for commenting on @site_name', array('@site_name' => $site_name));
                $params['body'] = t($config->get('tyc_anonymous_user_mailtext'), thank_you_commenter_mail_tokens($comment));
                // Sending mail
                thank_you_commenter_send_mail($email, $params, $nid);
            }
        }
    }
}

/**
 * Returns an array of variables to be replaced in mail text.
 */
function thank_you_commenter_mail_tokens($comment) {
    global $base_url;
    $node_title = db_select('node_field_data', 'nfd')
            ->fields('nfd', array('title'))
            ->condition('nid', $comment->entity_id->target_id)
            ->execute()
            ->fetchField();
    $tokens = array(
        '@username' => $comment->name->value,
        '@node_title' => $node_title,
        '@comment_url' => \Drupal\Core\Url::fromUri($base_url . '/node/' . $comment->entity_id->target_id, array('absolute' => TRUE, 'fragment' => 'comment-' . $comment->id()))->toString(),
        '@site' => Drupal::config('system.site')->get('name'),
        '@uri' => $base_url,
        '@uri_brief' => preg_replace('!^https?://!', '', $base_url),
    );

    return $tokens;
}

/**
 * Sending mail
 */
function thank_you_commenter_send_mail($email, $params, $nid) {
    $send = true;
    $mailManager = \Drupal::service('plugin.manager.mail');
    $langcode = \Drupal::currentUser()->getPreferredLangcode();
    $result = $mailManager->mail('thank_you_commenter', 'tyc_authenticated_usermail', $email, $langcode, $params, NULL, $send);
    if ($result['result'] !== true) {
        $message = t('There was a problem sending your email notification to @email for creating node @id.', array('@email' => $email, '@id' => $nid));
        drupal_set_message($message, 'error');
        \Drupal::logger('thank_you_commenter')->error($message);
        return;
    }

    $message = t('An email notification has been sent to @email for creating node @id.', array('@email' => $to, '@id' => $nid));
    drupal_set_message($message);
    \Drupal::logger('thank_you_commenter')->notice($message);
}

/**
 * Implements hook_mail().
 */
function thank_you_commenter_mail($key, &$message, $params) {
    $message['subject'] = $params['subject'];
    $message['body'][] = $params['body'];
}
